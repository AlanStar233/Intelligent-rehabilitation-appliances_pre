###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.40194/W32 for 8051         20/May/2018  10:49:58 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  E:\梁宇\项目2\zigbee读取MPU6050                    #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\Source\MPU6050.c          #
#    Command line       =  -f "E:\梁宇\项目2\zigbee读取MPU6050                #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\Tools\C #
#                          C2530DB\f8wEndev.cfg" (-DCPU32MHZ                  #
#                          -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3         #
#                          -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f          #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\Tools\C #
#                          C2530DB\f8wConfig.cfg" (-DZIGBEEPRO -DSECURE=0     #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xF000                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "E:\梁宇\项目2\zigbee读取MP #
#                          U6050 WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Pro #
#                          jects\zstack\Samples\SampleApp\Source\MPU6050.c"   #
#                          -D NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D         #
#                          MT_SYS_FUNC -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG  #
#                          -lC "E:\梁宇\项目2\zigbee读取MPU6050               #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\List #
#                          \" -lA "E:\梁宇\项目2\zigbee读取MPU6050            #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\List #
#                          \" --diag_suppress Pe001,Pa010 -o                  #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\Obj\ #
#                          " -e --no_code_motion --debug --core=plain         #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "E:\梁宇\项目2\zigbee读取M #
#                          PU6050 WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Pr #
#                          ojects\zstack\Samples\SampleApp\CC2530DB\" -I      #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\Source\" -I   #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\ZMain\T #
#                          I2530DB\" -I "E:\梁宇\项目2\zigbee读取MPU6050      #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\hal\include\" -I                         #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\hal\target\CC2530EB\" -I                 #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\mac\include\" -I                         #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\mac\high_level\" -I                      #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\mac\low_level\srf04\" -I                 #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\mac\low_level\srf04\single_chip\" -I     #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\mt\" -I "E:\梁宇\项目2\zigbee读取MPU6050 #
#                           WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects #
#                          \zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\ #
#                          Components\osal\include\" -I                       #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\services\saddr\" -I                      #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\services\sdata\" -I                      #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\af\" -I "E:\梁宇\项目2\zigbee读取M #
#                          PU6050 WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Pr #
#                          ojects\zstack\Samples\SampleApp\CC2530DB\..\..\..\ #
#                          ..\..\Components\stack\nwk\" -I                    #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sapi\" -I                          #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sec\" -I                           #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\" -I                           #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\zdo\" -I                           #
#                          "E:\梁宇\项目2\zigbee读取MPU6050                   #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\..\..\..\..\..\C #
#                          omponents\zmac\" -I "E:\梁宇\项目2\zigbee读取MPU60 #
#                          50 WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projec #
#                          ts\zstack\Samples\SampleApp\CC2530DB\..\..\..\..\. #
#                          .\Components\zmac\f8w\" -Ohz --require_prototypes  #
#    List file          =  E:\梁宇\项目2\zigbee读取MPU6050                    #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\List #
#                          \MPU6050.lst                                       #
#    Object file        =  E:\梁宇\项目2\zigbee读取MPU6050                    #
#                          WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\ #
#                          zstack\Samples\SampleApp\CC2530DB\EndDeviceEB\Obj\ #
#                          MPU6050.r51                                        #
#                                                                             #
#                                                                             #
###############################################################################

E:\梁宇\项目2\zigbee读取MPU6050 WIN3.0\ZStack-CC2530-2.5.1a-加速度传感器\Projects\zstack\Samples\SampleApp\Source\MPU6050.c
      1          /***************************************/
      2          /*           WeBee团队                 */
      3          /*项目类型：  外包项目                 */
      4          /*例程名称：  MPU6050                  */
      5          /*建立时间：  2018/05                  */
      6          /*描述：显示加速度计和陀螺仪的6位原始数据
      7          ****************************************/
      8          #include "ioCC2530.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xd0
   \   union <unnamed> volatile __sfr _A_PSW
   \                     _A_PSW:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
      9          #include "MPU6050.h"
     10          #include "OnBoard.h"
     11          #include "hal_types.h"
     12          
     13          #define uint  unsigned int
     14          #define uchar unsigned char
     15          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     16          int accX,accY,accZ,graX,graY,graZ;
   \                     accX:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     accY:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     accZ:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     graX:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     graY:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     graZ:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
     17          
     18          //****************************************
     19          //函数声明
     20          //****************************************
     21          void WriteSDA_0(void);
     22          void WriteSDA_1(void);
     23          void WriteSCL_0(void);
     24          void WriteSCL_1(void);
     25          void ReadSDA(void);
     26          void Init_IO(void);
     27          void MPU6050_Start(void);
     28          void MPU6050_Stop(void);
     29          void MPU6050_SendACK(uchar ack);
     30          uchar MPU6050_RecvACK(void);
     31          void MPU6050_SendByte(uchar data);
     32          uchar MPU6050_RecvByte(void);
     33          void Single_Write_MPU6050(uchar REG_Address,uchar REG_data);
     34          uchar Single_Read_MPU6050(uchar REG_Address);
     35          void InitMPU6050(void);
     36          void ALLInit(void);
     37          void Multiple_read_MPU6050(void);
     38          void delay_us(unsigned int u);
     39          
     40          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     41          void ALLInit(void)
   \                     ALLInit:
     42          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     43             Init_IO();
   \   000004                ; Setup parameters for call to function Init_IO
   \   000004   12....       LCALL   ??Init_IO?relay
     44             InitMPU6050();
   \   000007                ; Setup parameters for call to function InitMPU6050
   \   000007   12....       LCALL   ??InitMPU6050?relay
     45          }
   \   00000A   80..         SJMP    ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
     46          
     47          /****************us延时函数 32M晶振 单周期MCU********************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     48          void delay_us(unsigned int u)
   \                     delay_us:
     49          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     50             u=4*u;
     51             MicroWait(u);
   \   000005                ; Setup parameters for call to function Onboard_wait
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   7402         MOV     A,#0x2
   \   00000B   78..         MOV     R0,#?V0 + 0
   \   00000D   12....       LCALL   ?S_SHL
   \   000010   AA..         MOV     R2,?V0 + 0
   \   000012   AB..         MOV     R3,?V0 + 1
   \   000014   12....       LCALL   ??Onboard_wait?relay
     52          }
   \   000017   7F02         MOV     R7,#0x2
   \   000019   02....       LJMP    ?BANKED_LEAVE_XDATA
     53          
     54          /*****************************MPU6050*******************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     55          void WriteSDA_0(void) 
   \                     WriteSDA_0:
     56          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     57              P0DIR|=0x40;
   \   000000   43FD40       ORL     0xfd,#0x40
     58              SDA=0;
   \   000003   C287         CLR     0x80.7
     59          }
   \   000005   02....       LJMP    ?BRET
   \   000008                REQUIRE P0DIR
   \   000008                REQUIRE _A_P0
     60          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     61          void WriteSDA_1() 
   \                     WriteSDA_1:
     62          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     63              P0DIR|=0x40;
   \   000000   43FD40       ORL     0xfd,#0x40
     64              SDA=1;
   \   000003   D287         SETB    0x80.7
     65          }
   \   000005   02....       LJMP    ?BRET
   \   000008                REQUIRE P0DIR
   \   000008                REQUIRE _A_P0
     66              

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     67          void WriteSCL_0()    
   \                     WriteSCL_0:
     68          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     69              P0DIR|=0x80;
   \   000000   43FD80       ORL     0xfd,#0x80
     70              SCL=0;
   \   000003   C286         CLR     0x80.6
     71          }
   \   000005   02....       LJMP    ?BRET
   \   000008                REQUIRE P0DIR
   \   000008                REQUIRE _A_P0
     72          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     73          void WriteSCL_1()    
   \                     WriteSCL_1:
     74          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     75              P0DIR|=0x80;
   \   000000   43FD80       ORL     0xfd,#0x80
     76              SCL=1;
   \   000003   D286         SETB    0x80.6
     77          }
   \   000005   02....       LJMP    ?BRET
   \   000008                REQUIRE P0DIR
   \   000008                REQUIRE _A_P0
     78          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     79          void ReadSDA(void)//sda输入,=0
   \                     ReadSDA:
     80          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     81              P0DIR&=0xBF;
   \   000000   53FDBF       ANL     0xfd,#0xbf
     82          }
   \   000003   02....       LJMP    ?BRET
   \   000006                REQUIRE P0DIR
     83          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     84          void Init_IO(void)
   \                     Init_IO:
     85          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     86            P0DIR|=0xc0;
   \   000000   43FDC0       ORL     0xfd,#0xc0
     87            P0SEL&=0x3f;
   \   000003   53F33F       ANL     0xf3,#0x3f
     88          }
   \   000006   02....       LJMP    ?BRET
   \   000009                REQUIRE P0DIR
   \   000009                REQUIRE P0SEL
     89          
     90          
     91          /**************************************
     92          起始信号
     93          **************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     94          void MPU6050_Start()  
   \                     MPU6050_Start:
     95          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     96              WriteSDA_1();
   \   000004                ; Setup parameters for call to function WriteSDA_1
   \   000004   12....       LCALL   ??WriteSDA_1?relay
     97              WriteSCL_1();
   \   000007                ; Setup parameters for call to function WriteSCL_1
   \   000007   12....       LCALL   ?Subroutine3 & 0xFFFF
     98              delay_us(5);
     99              WriteSDA_0();
   \                     ??CrossCallReturnLabel_0:
   \   00000A                ; Setup parameters for call to function WriteSDA_0
   \   00000A   12....       LCALL   ??WriteSDA_0?relay
    100              delay_us(5);
   \   00000D                ; Setup parameters for call to function delay_us
   \   00000D   12....       LCALL   ??Subroutine6_0 & 0xFFFF
    101              WriteSCL_0();
    102              delay_us(5);
    103          }
   \                     ??CrossCallReturnLabel_19:
   \   000010   80..         SJMP    ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL   ??WriteSCL_1?relay
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                ; Setup parameters for call to function delay_us
   \   000003   7A05         MOV     R2,#0x5
   \   000005   7B00         MOV     R3,#0x0
   \   000007   12....       LCALL   ??delay_us?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine6_0:
   \   000000   7A05         MOV     R2,#0x5
   \   000002   7B00         MOV     R3,#0x0
   \   000004   12....       LCALL   ??delay_us?relay
   \   000007                ; Setup parameters for call to function WriteSCL_0
   \   000007                ; Setup parameters for call to function WriteSCL_0
   \   000007                ; Setup parameters for call to function WriteSCL_0
   \   000007                REQUIRE ??Subroutine7_0
   \   000007                ; // Fall through to label ??Subroutine7_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine7_0:
   \   000000   12....       LCALL   ??WriteSCL_0?relay
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                ; Setup parameters for call to function delay_us
   \   000003   7A05         MOV     R2,#0x5
   \   000005   7B00         MOV     R3,#0x0
   \   000007   12....       LCALL   ??delay_us?relay
   \   00000A   22           RET
    104          
    105          /**************************************
    106          停止信号
    107          **************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    108          void MPU6050_Stop()  
   \                     MPU6050_Stop:
    109          {    
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    110             WriteSDA_0();
   \   000004                ; Setup parameters for call to function WriteSDA_0
   \   000004   12....       LCALL   ??WriteSDA_0?relay
    111             WriteSCL_1();
   \   000007                ; Setup parameters for call to function WriteSCL_1
   \   000007   12....       LCALL   ?Subroutine3 & 0xFFFF
    112             delay_us(5);
    113             WriteSDA_1();
   \                     ??CrossCallReturnLabel_1:
   \   00000A                ; Setup parameters for call to function WriteSDA_1
   \   00000A   12....       LCALL   ??WriteSDA_1?relay
    114          }
   \   00000D                REQUIRE ?Subroutine0
   \   00000D                ; // Fall through to label ?Subroutine0
    115          
    116          //I2C发送应答信号
    117          //入口参数:ack (0:ACK 1:NAK)

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    118          void MPU6050_SendACK(uchar ack)
   \                     MPU6050_SendACK:
    119          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
    120              
    121              SDA=ack;                     //写应答信号
   \   000006   A2E0         MOV     C,0xE0 /* A   */.0
   \   000008   9287         MOV     0x80.7,C
    122              WriteSCL_1();                   //拉高时钟线
   \   00000A                ; Setup parameters for call to function WriteSCL_1
   \   00000A   12....       LCALL   ?Subroutine2 & 0xFFFF
    123              delay_us(5);//Delay5us();    //延时
    124              WriteSCL_0();                   //拉低时钟线
    125              delay_us(5);//Delay5us();    //延时
    126          }
   \                     ??CrossCallReturnLabel_17:
   \   00000D   80..         SJMP    ??Subroutine8_0
   \   00000F                REQUIRE _A_P0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ??WriteSCL_1?relay
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                ; Setup parameters for call to function delay_us
   \   000003                REQUIRE ??Subroutine6_0
   \   000003                ; // Fall through to label ??Subroutine6_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine8_0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    127          
    128          /**************************************
    129          发送应答信号
    130          **************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    131          uchar MPU6050_RecvACK()
   \                     MPU6050_RecvACK:
    132          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    133              ReadSDA();
   \   000004   53FDBF       ANL     0xfd,#0xbf
    134              WriteSCL_1();                       //拉高时钟线
   \   000007                ; Setup parameters for call to function WriteSCL_1
   \   000007   12....       LCALL   ?Subroutine3 & 0xFFFF
    135              delay_us(5);//Delay5us();    //延时
    136              CY=SDA;                      //读应答信号
   \                     ??CrossCallReturnLabel_2:
   \   00000A   A287         MOV     C,0x80.7
   \   00000C   92D7         MOV     0xd0.7,C
    137              WriteSCL_0();                       //拉低时钟线
   \   00000E                ; Setup parameters for call to function WriteSCL_0
   \   00000E   12....       LCALL   ??Subroutine7_0 & 0xFFFF
    138              delay_us(5);//Delay5us();    //延时
    139              P0DIR|=0x00;
   \                     ??CrossCallReturnLabel_20:
   \   000011   85FDFD       MOV     0xfd,0xfd
    140              return CY;
   \   000014   A2D7         MOV     C,0xd0.7
   \   000016   E4           CLR     A
   \   000017   33           RLC     A
   \   000018   F9           MOV     R1,A
   \   000019   80..         SJMP    ?Subroutine0
   \   00001B                REQUIRE _A_PSW
   \   00001B                REQUIRE _A_P0
   \   00001B                REQUIRE P0DIR
    141          }
    142          
    143          /**************************************
    144          向IIC总线发送一个字节数据
    145          **************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    146          void MPU6050_SendByte(uchar data)
   \                     MPU6050_SendByte:
    147          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
    148              uchar i;
    149              SDA_OUT();
   \   000007   43FD80       ORL     0xfd,#0x80
    150              
    151              for(i=0;i<8;i++)         //8位计数器
   \   00000A   7E08         MOV     R6,#0x8
    152              {       
    153                  if(data&0x80)
   \                     ??MPU6050_SendByte_0:
   \   00000C   EF           MOV     A,R7
   \   00000D   A2E7         MOV     C,0xE0 /* A   */.7
   \   00000F   5005         JNC     ??MPU6050_SendByte_1
    154                  {WriteSDA_1();}
   \   000011                ; Setup parameters for call to function WriteSDA_1
   \   000011   12....       LCALL   ??WriteSDA_1?relay
   \   000014   8003         SJMP    ??MPU6050_SendByte_2
    155                  else 
    156                  {WriteSDA_0();}
   \                     ??MPU6050_SendByte_1:
   \   000016                ; Setup parameters for call to function WriteSDA_0
   \   000016   12....       LCALL   ??WriteSDA_0?relay
    157                  
    158                  data<<=1;
   \                     ??MPU6050_SendByte_2:
   \   000019   EF           MOV     A,R7
   \   00001A   C3           CLR     C
   \   00001B   33           RLC     A
   \   00001C   FF           MOV     R7,A
    159                  WriteSCL_1();            //拉高时钟线
   \   00001D                ; Setup parameters for call to function WriteSCL_1
   \   00001D   12....       LCALL   ?Subroutine2 & 0xFFFF
    160                  delay_us(5);          //延时
    161                  WriteSCL_0();            //拉低时钟线
    162                  delay_us(5);          //延时
    163              }
   \                     ??CrossCallReturnLabel_18:
   \   000020   1E           DEC     R6
   \   000021   EE           MOV     A,R6
   \   000022   70E8         JNZ     ??MPU6050_SendByte_0
    164              MPU6050_RecvACK();
   \   000024                ; Setup parameters for call to function MPU6050_RecvACK
   \   000024   12....       LCALL   ??MPU6050_RecvACK?relay
    165          }
   \   000027   80..         SJMP    ??Subroutine8_0
   \   000029                REQUIRE P0DIR
    166          
    167          /**************************************
    168          从IIC总线接收一个字节数据
    169          **************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   EE           MOV     A,R6
   \   000001   F9           MOV     R1,A
   \   000002                REQUIRE ??Subroutine8_0
   \   000002                ; // Fall through to label ??Subroutine8_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    170          uchar MPU6050_RecvByte()
   \                     MPU6050_RecvByte:
    171          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    172            
    173              uchar i;
    174              uchar dat = 0;
   \   000005   7E00         MOV     R6,#0x0
    175              WriteSDA_1();                  //使能内部上拉,准备读取数据,
   \   000007                ; Setup parameters for call to function WriteSDA_1
   \   000007   12....       LCALL   ??WriteSDA_1?relay
    176              for (i=0; i<8; i++)         //8位计数器
   \   00000A   7F08         MOV     R7,#0x8
    177              {
    178                  dat <<= 1;
    179                  SCL = 1;                //拉高时钟线
   \                     ??MPU6050_RecvByte_0:
   \   00000C   D286         SETB    0x80.6
    180                  delay_us(5);                 //延时
   \   00000E                ; Setup parameters for call to function delay_us
   \   00000E   7A05         MOV     R2,#0x5
   \   000010   7B00         MOV     R3,#0x0
   \   000012   12....       LCALL   ??delay_us?relay
    181                  dat |= SDA;             //读数据               
   \   000015   A287         MOV     C,0x80.7
   \   000017   E4           CLR     A
   \   000018   33           RLC     A
   \   000019   F8           MOV     R0,A
   \   00001A   EE           MOV     A,R6
   \   00001B   33           RLC     A
   \   00001C   48           ORL     A,R0
   \   00001D   FE           MOV     R6,A
    182                  SCL = 0;                //拉低时钟线
   \   00001E   C286         CLR     0x80.6
    183                   delay_us(5);                 //延时
   \   000020                ; Setup parameters for call to function delay_us
   \   000020   7A05         MOV     R2,#0x5
   \   000022   7B00         MOV     R3,#0x0
   \   000024   12....       LCALL   ??delay_us?relay
    184              }
   \   000027   1F           DEC     R7
   \   000028   EF           MOV     A,R7
   \   000029   70E1         JNZ     ??MPU6050_RecvByte_0
    185              return dat;
   \   00002B   80..         SJMP    ?Subroutine1
   \   00002D                REQUIRE _A_P0
    186          
    187          }
    188          
    189          //******单字节写入*******************************************

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    190          void Single_Write_MPU6050(uchar REG_Address,uchar REG_data)
   \                     Single_Write_MPU6050:
    191          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
   \   000007   EA           MOV     A,R2
   \   000008   FE           MOV     R6,A
    192              MPU6050_Start();                  //起始信号
   \   000009                ; Setup parameters for call to function MPU6050_Start
   \   000009   12....       LCALL   ?Subroutine4 & 0xFFFF
    193              MPU6050_SendByte(SlaveAddress);   //发送设备地址+写信号
    194              MPU6050_SendByte(REG_Address);    //内部寄存器地址，
    195              MPU6050_SendByte(REG_data);       //内部寄存器数据，
   \                     ??CrossCallReturnLabel_3:
   \   00000C                ; Setup parameters for call to function MPU6050_SendByte
   \   00000C   EE           MOV     A,R6
   \   00000D   F9           MOV     R1,A
   \   00000E   12....       LCALL   ??MPU6050_SendByte?relay
    196              MPU6050_Stop();                   //发送停止信号
   \   000011                ; Setup parameters for call to function MPU6050_Stop
   \   000011   12....       LCALL   ??MPU6050_Stop?relay
    197          }
   \   000014   02....       LJMP    ??Subroutine8_0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL   ??MPU6050_Start?relay
   \   000003                ; Setup parameters for call to function MPU6050_SendByte
   \   000003                ; Setup parameters for call to function MPU6050_SendByte
   \   000003   79D0         MOV     R1,#-0x30
   \   000005   12....       LCALL   ??MPU6050_SendByte?relay
   \   000008                ; Setup parameters for call to function MPU6050_SendByte
   \   000008                ; Setup parameters for call to function MPU6050_SendByte
   \   000008   EF           MOV     A,R7
   \   000009   F9           MOV     R1,A
   \   00000A   12....       LCALL   ??MPU6050_SendByte?relay
   \   00000D   22           RET
    198          
    199          //********单字节读取*****************************************

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    200          uchar Single_Read_MPU6050(uchar REG_Address)
   \                     Single_Read_MPU6050:
    201          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
    202          	uchar REG_data;
    203          	MPU6050_Start();                   //起始信号
   \   000007                ; Setup parameters for call to function MPU6050_Start
   \   000007   12....       LCALL   ?Subroutine4 & 0xFFFF
    204          	MPU6050_SendByte(SlaveAddress);    //发送设备地址+写信号
    205          	MPU6050_SendByte(REG_Address);     //发送存储单元地址，从0开始	
    206          	MPU6050_Start();                   //起始信号
   \                     ??CrossCallReturnLabel_4:
   \   00000A                ; Setup parameters for call to function MPU6050_Start
   \   00000A   12....       LCALL   ??MPU6050_Start?relay
    207          	MPU6050_SendByte(SlaveAddress+1);  //发送设备地址+读信号
   \   00000D                ; Setup parameters for call to function MPU6050_SendByte
   \   00000D   79D1         MOV     R1,#-0x2f
   \   00000F   12....       LCALL   ??MPU6050_SendByte?relay
    208          	REG_data=MPU6050_RecvByte();       //读出寄存器数据
   \   000012                ; Setup parameters for call to function MPU6050_RecvByte
   \   000012   12....       LCALL   ??MPU6050_RecvByte?relay
   \   000015   E9           MOV     A,R1
   \   000016   FE           MOV     R6,A
    209          	MPU6050_SendACK(1);                //接收应答信号
   \   000017                ; Setup parameters for call to function MPU6050_SendACK
   \   000017   7901         MOV     R1,#0x1
   \   000019   12....       LCALL   ??MPU6050_SendACK?relay
    210          	MPU6050_Stop();                    //停止信号
   \   00001C                ; Setup parameters for call to function MPU6050_Stop
   \   00001C   12....       LCALL   ??MPU6050_Stop?relay
    211          	return REG_data;
   \   00001F   02....       LJMP    ?Subroutine1 & 0xFFFF
    212          }
    213          
    214          //*****************************************************************
    215          
    216          //初始化MPU6050，根据需要请参考pdf进行修改************************

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    217          void InitMPU6050()
   \                     InitMPU6050:
    218          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    219          	Single_Write_MPU6050(PWR_MGMT_1,0x00);	//解除休眠状态
   \   000004                ; Setup parameters for call to function Single_Write_MPU6050
   \   000004   7A00         MOV     R2,#0x0
   \   000006   796B         MOV     R1,#0x6b
   \   000008   12....       LCALL   ??Single_Write_MPU6050?relay
    220          	Single_Write_MPU6050(SMPLRT_DIV,0x07);
   \   00000B                ; Setup parameters for call to function Single_Write_MPU6050
   \   00000B   7A07         MOV     R2,#0x7
   \   00000D   7919         MOV     R1,#0x19
   \   00000F   12....       LCALL   ??Single_Write_MPU6050?relay
    221          	Single_Write_MPU6050(CONFIG,0x06);
   \   000012                ; Setup parameters for call to function Single_Write_MPU6050
   \   000012   7A06         MOV     R2,#0x6
   \   000014   791A         MOV     R1,#0x1a
   \   000016   12....       LCALL   ??Single_Write_MPU6050?relay
    222          	Single_Write_MPU6050(GYRO_CONFIG,0x18);
   \   000019                ; Setup parameters for call to function Single_Write_MPU6050
   \   000019   7A18         MOV     R2,#0x18
   \   00001B   791B         MOV     R1,#0x1b
   \   00001D   12....       LCALL   ??Single_Write_MPU6050?relay
    223          	Single_Write_MPU6050(ACCEL_CONFIG,0x01);
   \   000020                ; Setup parameters for call to function Single_Write_MPU6050
   \   000020   7A01         MOV     R2,#0x1
   \   000022   791C         MOV     R1,#0x1c
   \   000024   12....       LCALL   ??Single_Write_MPU6050?relay
    224          }
   \   000027   02....       LJMP    ?Subroutine0 & 0xFFFF
    225          //*********************************************************
    226          //
    227          //连续读出MPU6050内部数据
    228          //
    229          //*********************************************************

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    230          void Multiple_read_MPU6050(void)
   \                     Multiple_read_MPU6050:
    231          {   
   \   000000   74EA         MOV     A,#-0x16
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 22
   \   000005                ; Auto size: 12
   \   000005   74F4         MOV     A,#-0xc
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    232            char BUF[12]; //接收数据缓存区  
    233            BUF[0]=Single_Read_MPU6050(ACCEL_XOUT_H);
   \   00000A                ; Setup parameters for call to function Single_Read_MPU6050
   \   00000A   793B         MOV     R1,#0x3b
   \   00000C   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   00000F   85..82       MOV     DPL,?XSP + 0
   \   000012   85..83       MOV     DPH,?XSP + 1
   \   000015   F0           MOVX    @DPTR,A
    234            BUF[1]=Single_Read_MPU6050(ACCEL_XOUT_L);
   \   000016                ; Setup parameters for call to function Single_Read_MPU6050
   \   000016   793C         MOV     R1,#0x3c
   \   000018   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   00001B   F5..         MOV     ?V0 + 4,A
   \   00001D   7401         MOV     A,#0x1
   \   00001F   12....       LCALL   ?XSTACK_DISP0_8
   \   000022   E9           MOV     A,R1
   \   000023   F0           MOVX    @DPTR,A
    235            BUF[2]=Single_Read_MPU6050(ACCEL_YOUT_H);
   \   000024                ; Setup parameters for call to function Single_Read_MPU6050
   \   000024   793D         MOV     R1,#0x3d
   \   000026   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   000029   F5..         MOV     ?V0 + 2,A
   \   00002B   7402         MOV     A,#0x2
   \   00002D   12....       LCALL   ?XSTACK_DISP0_8
   \   000030   E9           MOV     A,R1
   \   000031   F0           MOVX    @DPTR,A
    236            BUF[3]=Single_Read_MPU6050(ACCEL_YOUT_L);
   \   000032                ; Setup parameters for call to function Single_Read_MPU6050
   \   000032   793E         MOV     R1,#0x3e
   \   000034   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   000037   F5..         MOV     ?V0 + 3,A
   \   000039   7403         MOV     A,#0x3
   \   00003B   12....       LCALL   ?XSTACK_DISP0_8
   \   00003E   E9           MOV     A,R1
   \   00003F   F0           MOVX    @DPTR,A
    237            BUF[4]=Single_Read_MPU6050(ACCEL_ZOUT_H);
   \   000040                ; Setup parameters for call to function Single_Read_MPU6050
   \   000040   793F         MOV     R1,#0x3f
   \   000042   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   000045   F5..         MOV     ?V0 + 1,A
   \   000047   7404         MOV     A,#0x4
   \   000049   12....       LCALL   ?XSTACK_DISP0_8
   \   00004C   E9           MOV     A,R1
   \   00004D   F0           MOVX    @DPTR,A
    238            BUF[5]=Single_Read_MPU6050(ACCEL_ZOUT_L);
   \   00004E                ; Setup parameters for call to function Single_Read_MPU6050
   \   00004E   7940         MOV     R1,#0x40
   \   000050   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   000053   F5..         MOV     ?V0 + 10,A
   \   000055   7405         MOV     A,#0x5
   \   000057   12....       LCALL   ?XSTACK_DISP0_8
   \   00005A   E9           MOV     A,R1
   \   00005B   F0           MOVX    @DPTR,A
    239            
    240            BUF[6]=Single_Read_MPU6050(GYRO_XOUT_H);
   \   00005C                ; Setup parameters for call to function Single_Read_MPU6050
   \   00005C   7943         MOV     R1,#0x43
   \   00005E   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_11:
   \   000061   F5..         MOV     ?V0 + 0,A
   \   000063   7406         MOV     A,#0x6
   \   000065   12....       LCALL   ?XSTACK_DISP0_8
   \   000068   E9           MOV     A,R1
   \   000069   F0           MOVX    @DPTR,A
    241            BUF[7]=Single_Read_MPU6050(GYRO_XOUT_L);
   \   00006A                ; Setup parameters for call to function Single_Read_MPU6050
   \   00006A   7944         MOV     R1,#0x44
   \   00006C   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_12:
   \   00006F   F5..         MOV     ?V0 + 8,A
   \   000071   7407         MOV     A,#0x7
   \   000073   12....       LCALL   ?XSTACK_DISP0_8
   \   000076   E9           MOV     A,R1
   \   000077   F0           MOVX    @DPTR,A
    242            BUF[8]=Single_Read_MPU6050(GYRO_YOUT_H);
   \   000078                ; Setup parameters for call to function Single_Read_MPU6050
   \   000078   7945         MOV     R1,#0x45
   \   00007A   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_13:
   \   00007D   FF           MOV     R7,A
   \   00007E   7408         MOV     A,#0x8
   \   000080   12....       LCALL   ?XSTACK_DISP0_8
   \   000083   E9           MOV     A,R1
   \   000084   F0           MOVX    @DPTR,A
    243            BUF[9]=Single_Read_MPU6050(GYRO_YOUT_L);
   \   000085                ; Setup parameters for call to function Single_Read_MPU6050
   \   000085   7946         MOV     R1,#0x46
   \   000087   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_14:
   \   00008A   F5..         MOV     ?V0 + 6,A
   \   00008C   7409         MOV     A,#0x9
   \   00008E   12....       LCALL   ?XSTACK_DISP0_8
   \   000091   E9           MOV     A,R1
   \   000092   F0           MOVX    @DPTR,A
    244            BUF[10]=Single_Read_MPU6050(GYRO_ZOUT_H);
   \   000093                ; Setup parameters for call to function Single_Read_MPU6050
   \   000093   7947         MOV     R1,#0x47
   \   000095   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_15:
   \   000098   FE           MOV     R6,A
   \   000099   740A         MOV     A,#0xa
   \   00009B   12....       LCALL   ?XSTACK_DISP0_8
   \   00009E   E9           MOV     A,R1
   \   00009F   F0           MOVX    @DPTR,A
    245            BUF[11]=Single_Read_MPU6050(GYRO_ZOUT_L);
   \   0000A0                ; Setup parameters for call to function Single_Read_MPU6050
   \   0000A0   7948         MOV     R1,#0x48
   \   0000A2   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_16:
   \   0000A5   F5..         MOV     ?V0 + 12,A
   \   0000A7   740B         MOV     A,#0xb
   \   0000A9   12....       LCALL   ?XSTACK_DISP0_8
   \   0000AC   E9           MOV     A,R1
   \   0000AD   F0           MOVX    @DPTR,A
    246            
    247            accX=(BUF[0]<<8)|BUF[1]; 
   \   0000AE   85..82       MOV     DPL,?XSP + 0
   \   0000B1   85..83       MOV     DPH,?XSP + 1
   \   0000B4   E0           MOVX    A,@DPTR
   \   0000B5   F9           MOV     R1,A
   \   0000B6   E5..         MOV     A,?V0 + 4
   \   0000B8   90....       MOV     DPTR,#accX
   \   0000BB   F0           MOVX    @DPTR,A
   \   0000BC   A3           INC     DPTR
   \   0000BD   E9           MOV     A,R1
   \   0000BE   F0           MOVX    @DPTR,A
    248            accY=(BUF[2]<<8)|BUF[3]; 
   \   0000BF   A9..         MOV     R1,?V0 + 2
   \   0000C1   85....       MOV     ?V0 + 2,?V0 + 3
   \   0000C4   E5..         MOV     A,?V0 + 2
   \   0000C6   90....       MOV     DPTR,#accY
   \   0000C9   F0           MOVX    @DPTR,A
   \   0000CA   A3           INC     DPTR
   \   0000CB   E9           MOV     A,R1
   \   0000CC   F0           MOVX    @DPTR,A
    249            accZ=(BUF[4]<<8)|BUF[5]; 
   \   0000CD   E5..         MOV     A,?V0 + 10
   \   0000CF   90....       MOV     DPTR,#accZ
   \   0000D2   F0           MOVX    @DPTR,A
   \   0000D3   A3           INC     DPTR
   \   0000D4   E5..         MOV     A,?V0 + 1
   \   0000D6   F0           MOVX    @DPTR,A
    250            graX=(BUF[6]<<8)|BUF[7];
   \   0000D7   E5..         MOV     A,?V0 + 8
   \   0000D9   90....       MOV     DPTR,#graX
   \   0000DC   F0           MOVX    @DPTR,A
   \   0000DD   A3           INC     DPTR
   \   0000DE   E5..         MOV     A,?V0 + 0
   \   0000E0   F0           MOVX    @DPTR,A
    251            graY=(BUF[8]<<8)|BUF[9];
   \   0000E1   EF           MOV     A,R7
   \   0000E2   F9           MOV     R1,A
   \   0000E3   E5..         MOV     A,?V0 + 6
   \   0000E5   90....       MOV     DPTR,#graY
   \   0000E8   F0           MOVX    @DPTR,A
   \   0000E9   A3           INC     DPTR
   \   0000EA   E9           MOV     A,R1
   \   0000EB   F0           MOVX    @DPTR,A
    252            graZ=(BUF[10]<<8)|BUF[11];
   \   0000EC   EE           MOV     A,R6
   \   0000ED   F9           MOV     R1,A
   \   0000EE   E5..         MOV     A,?V0 + 12
   \   0000F0   90....       MOV     DPTR,#graZ
   \   0000F3   F0           MOVX    @DPTR,A
   \   0000F4   A3           INC     DPTR
   \   0000F5   E9           MOV     A,R1
   \   0000F6   F0           MOVX    @DPTR,A
    253          }
   \   0000F7   740C         MOV     A,#0xc
   \   0000F9   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000FC   7F0E         MOV     R7,#0xe
   \   0000FE   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   12....       LCALL   ??Single_Read_MPU6050?relay
   \   000003   E9           MOV     A,R1
   \   000004   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ALLInit?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ALLInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??delay_us?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    delay_us

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??WriteSDA_0?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    WriteSDA_0

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??WriteSDA_1?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    WriteSDA_1

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??WriteSCL_0?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    WriteSCL_0

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??WriteSCL_1?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    WriteSCL_1

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ReadSDA?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ReadSDA

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Init_IO?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Init_IO

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MPU6050_Start?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MPU6050_Start

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MPU6050_Stop?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MPU6050_Stop

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MPU6050_SendACK?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MPU6050_SendACK

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MPU6050_RecvACK?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MPU6050_RecvACK

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MPU6050_SendByte?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MPU6050_SendByte

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??MPU6050_RecvByte?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    MPU6050_RecvByte

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Single_Write_MPU6050?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Single_Write_MPU6050

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Single_Read_MPU6050?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Single_Read_MPU6050

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??InitMPU6050?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    InitMPU6050

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Multiple_read_MPU6050?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Multiple_read_MPU6050
    254          

   Maximum stack usage in bytes:

     Function                  ISTACK PSTACK XSTACK
     --------                  ------ ------ ------
     ALLInit                       2      0      0
       -> Init_IO                  4      0      0
       -> InitMPU6050              4      0      0
     InitMPU6050                   2      0      0
       -> Single_Write_MPU6050     4      0      0
       -> Single_Write_MPU6050     4      0      0
       -> Single_Write_MPU6050     4      0      0
       -> Single_Write_MPU6050     4      0      0
       -> Single_Write_MPU6050     4      0      0
     Init_IO                       0      0      0
     MPU6050_RecvACK               2      0      9
       -> WriteSCL_1               4      0      0
       -> delay_us                 4      0      0
       -> WriteSCL_0               4      0      0
       -> delay_us                 4      0      0
     MPU6050_RecvByte              0      0     18
       -> WriteSDA_1               0      0     18
       -> delay_us                 0      0     18
       -> delay_us                 0      0     18
     MPU6050_SendACK               0      0     18
       -> WriteSCL_1               0      0     18
       -> delay_us                 0      0     18
       -> WriteSCL_0               0      0     18
       -> delay_us                 0      0     18
     MPU6050_SendByte              0      0     18
       -> WriteSDA_1               0      0     18
       -> WriteSDA_0               0      0     18
       -> WriteSCL_1               0      0     18
       -> delay_us                 0      0     18
       -> WriteSCL_0               0      0     18
       -> delay_us                 0      0     18
       -> MPU6050_RecvACK          0      0     18
     MPU6050_Start                 2      0      9
       -> WriteSDA_1               4      0      0
       -> WriteSCL_1               4      0      0
       -> delay_us                 4      0      0
       -> WriteSDA_0               4      0      0
       -> delay_us                 4      0      0
       -> WriteSCL_0               4      0      0
       -> delay_us                 4      0      0
     MPU6050_Stop                  2      0      9
       -> WriteSDA_0               4      0      0
       -> WriteSCL_1               4      0      0
       -> delay_us                 4      0      0
       -> WriteSDA_1               4      0      0
     Multiple_read_MPU6050         1      0     34
       -> Single_Read_MPU6050      0      0     68
       -> Single_Read_MPU6050      0      0     68
       -> Single_Read_MPU6050      0      0     68
       -> Single_Read_MPU6050      0      0     68
       -> Single_Read_MPU6050      0      0     68
       -> Single_Read_MPU6050      0      0     68
       -> Single_Read_MPU6050      0      0     68
       -> Single_Read_MPU6050      0      0     68
       -> Single_Read_MPU6050      0      0     68
       -> Single_Read_MPU6050      0      0     68
       -> Single_Read_MPU6050      0      0     68
       -> Single_Read_MPU6050      0      0     68
     ReadSDA                       0      0      0
     Single_Read_MPU6050           0      0     43
       -> MPU6050_Start            0      0     18
       -> MPU6050_SendByte         0      0     18
       -> MPU6050_SendByte         0      0     18
       -> MPU6050_Start            0      0     18
       -> MPU6050_SendByte         0      0     18
       -> MPU6050_RecvByte         0      0     18
       -> MPU6050_SendACK          0      0     18
       -> MPU6050_Stop             0      0     18
     Single_Write_MPU6050          0      0      9
       -> MPU6050_Start            0      0     18
       -> MPU6050_SendByte         0      0     18
       -> MPU6050_SendByte         0      0     18
       -> MPU6050_SendByte         0      0     18
       -> MPU6050_Stop             0      0     18
     WriteSCL_0                    0      0      9
     WriteSCL_1                    0      0      9
     WriteSDA_0                    0      0      9
     WriteSDA_1                    0      0      9
     delay_us                      0      0     19
       -> Onboard_wait             0      0     20


   Segment part sizes:

     Function/Label                Bytes
     --------------                -----
     _A_P0                            1
     _A_PSW                           1
     P0SEL                            1
     P0DIR                            1
     accX                             2
     accY                             2
     accZ                             2
     graX                             2
     graY                             2
     graZ                             2
     ALLInit                         12
     ?Subroutine0                     7
     delay_us                        28
     WriteSDA_0                       8
     WriteSDA_1                       8
     WriteSCL_0                       8
     WriteSCL_1                       8
     ReadSDA                          6
     Init_IO                          9
     MPU6050_Start                   18
     ?Subroutine3                    11
     ??Subroutine6_0                  7
     ??Subroutine7_0                 11
     MPU6050_Stop                    13
     MPU6050_SendACK                 15
     ?Subroutine2                     3
     ??Subroutine8_0                  5
     MPU6050_RecvACK                 27
     MPU6050_SendByte                41
     ?Subroutine1                     2
     MPU6050_RecvByte                45
     Single_Write_MPU6050            23
     ?Subroutine4                    14
     Single_Read_MPU6050             34
     InitMPU6050                     42
     Multiple_read_MPU6050          257
     ?Subroutine5                     5
     ??ALLInit?relay                  6
     ??delay_us?relay                 6
     ??WriteSDA_0?relay               6
     ??WriteSDA_1?relay               6
     ??WriteSCL_0?relay               6
     ??WriteSCL_1?relay               6
     ??ReadSDA?relay                  6
     ??Init_IO?relay                  6
     ??MPU6050_Start?relay            6
     ??MPU6050_Stop?relay             6
     ??MPU6050_SendACK?relay          6
     ??MPU6050_RecvACK?relay          6
     ??MPU6050_SendByte?relay         6
     ??MPU6050_RecvByte?relay         6
     ??Single_Write_MPU6050?relay     6
     ??Single_Read_MPU6050?relay      6
     ??InitMPU6050?relay              6
     ??Multiple_read_MPU6050?relay    6

 
 667 bytes in segment BANKED_CODE
 108 bytes in segment BANK_RELAYS
   4 bytes in segment SFR_AN
  12 bytes in segment XDATA_Z
 
 775 bytes of CODE  memory
   0 bytes of DATA  memory (+ 4 bytes shared)
  12 bytes of XDATA memory

Errors: none
Warnings: none
